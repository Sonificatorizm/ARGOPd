#N canvas 355 68 343 158 10;
#X text 24 120 ExMM147-Parole3;
#X text 172 27 Mac-Intel only;
#X text 70 11 Seulement pour Mac-Intel;
#N canvas 171 23 836 774 ARGO 0;
#X obj 378 576 outlet~;
#X msg 483 167 set \$1;
#X obj 199 409 sel 1 0;
#X obj 47 80 loadbang;
#X msg 91 263 set \$1;
#X obj 637 315 cnv 15 60 30 empty empty empty 20 12 0 14 -24198 -66577
0;
#N canvas 412 49 438 432 Help 0;
#X obj 14 111 cnv 15 400 230 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 17 110 Citation;
#X obj 13 346 cnv 15 290 60 empty empty empty 20 12 0 14 -258113 -66577
0;
#X text 52 361 < 90 sec at 44100 samples/sec;
#X text 16 350 Audio < 4e+06 samples;
#X text 49 128 flite : text-to-speech synthesis with libflite;
#X text 46 144 ACKNOWLEDGEMENTS:;
#X text 64 159 Flite runtime speech synthesis library by Alan W Black
and Kevin A. Lenzo., f 55;
#X text 14 8 MM Parole3;
#X text 35 23 Utilise l'objet flite de le library moocow;
#X obj 64 186 pddp/pddplink http://www.speech.cs.cmu.edu/flite/;
#X text 64 203 Flite (festival-lite) is a small \, fast run-time synthesis
engine developed at CMU and primarily designed for small embedded machines
and/or large servers. Flite is designed as an alternative synthesis
engine to Festival for voices built using the FestVox suite of voice
building tools., f 56;
#X obj 35 38 pddp/pddplink http://en.wikipedia.org/wiki/Festival_Speech_Synthesis_System
;
#X text 34 52 flite: Text-to-Speech external v0.02-3 by Bryan Jurish
;
#X text 52 288 Bryan Jurish <moocow.bovine@gmail.com>;
#X restore 644 321 pd Help;
#X obj 47 131 t b b b b;
#X obj 262 550 spigot;
#X obj 78 293 cnv 15 400 90 empty empty empty 20 12 0 14 -260097 -66577
0;
#X obj 201 201 cnv 5 298 28 empty empty empty 20 12 0 14 -262144 -66577
0;
#X obj 203 228 hsl 295 40 0 1 0 0 \$0-A \$0-B 0.8sec 245 36 1 9 -188398
-1 -1 0 1;
#X obj 344 263 cnv 4 10 4 empty empty empty 20 12 0 14 -1 -66577 0
;
#X text 182 173 Trig Decl;
#X obj 222 200 tgl 12 1 \$0-A \$0-B Play 14 6 1 9 -262144 -1 -1 1 1
;
#X obj 200 200 bng 12 250 50 0 \$0-A \$0-B empty 14 6 1 9 -262144 -1
-1;
#N canvas 415 209 687 360 RenameArray 0;
#X obj 124 33 realtime;
#X obj 124 57 * 100;
#X obj 124 80 int;
#X obj 102 261 pack s s;
#X msg 102 286 \; \$1 rename \$2;
#X msg 28 179 set \$1;
#X text 81 290 (1);
#X text 5 178 (2);
#X text 80 212 (3);
#X text 221 21 array -> Voir:;
#X text 221 34 Help Browser/2.control.examples/15.array.pd;
#X text 221 47 Help Browser/2.control.examples/16.more.arrays.pd;
#X text 221 59 Help Browser/5.reference/all_about_arrays.pd;
#X obj 71 325 outlet;
#X obj 170 5 inlet;
#X text 303 123 SOLUTION:;
#X obj 25 324 outlet;
#X text 305 95 PROBLEME: Comment dupliquer un MiniModule comportant
un ou plusieurs arrays;
#X obj 59 151 t a a b a;
#X msg 102 213 A2826;
#X text 308 139 (1) Renommer les arrays;
#X text 307 154 (2) Renommer le message qui renomme les arrays;
#X text 307 172 Démarrer en nommant les arrays (graph) A \, B... et
en mettant A \, B... dans (3);
#X obj 59 124 cyclone/tosymbol;
#X obj 102 235 cyclone/tosymbol;
#X obj 59 102 cyclone/sprintf A%d;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 25 0;
#X connect 3 0 4 0;
#X connect 5 0 19 0;
#X connect 5 0 16 0;
#X connect 14 0 0 1;
#X connect 18 0 5 0;
#X connect 18 1 13 0;
#X connect 18 2 19 0;
#X connect 18 3 3 1;
#X connect 19 0 24 0;
#X connect 23 0 18 0;
#X connect 24 0 3 0;
#X connect 25 0 23 0;
#X restore 81 168 pd RenameArray;
#N canvas 462 252 218 285 label 0;
#X msg 53 178 label \$1;
#X obj 54 90 int;
#X obj 54 113 / 10;
#X obj 54 67 / 4410;
#X obj 54 41 inlet;
#X obj 53 201 outlet;
#X obj 53 156 cyclone/tosymbol;
#X obj 54 135 cyclone/sprintf %ssec;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 2 0 7 0;
#X connect 3 0 1 0;
#X connect 4 0 3 0;
#X connect 6 0 0 0;
#X connect 7 0 6 0;
#X restore 138 223 pd label;
#X obj 199 497 tabplay~;
#X msg 218 464 stop;
#X obj 300 501 line;
#X msg 331 471 1;
#X obj 529 420 / 44.1;
#X msg 529 441 set \$1;
#X msg 363 471 879.161;
#X msg 300 471 0;
#X obj 232 148 t b b;
#X obj 337 440 t b b b;
#X msg 259 171 0;
#X obj 244 523 t b b;
#N canvas 347 327 389 234 Normalize 0;
#X obj 106 38 inlet;
#X msg 155 175 \; \$1 normalize;
#X msg 106 107 A2826;
#X obj 279 36 inlet;
#X obj 279 59 t b b;
#X obj 105 132 zexy/list2symbol;
#X connect 0 0 2 0;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 1 0;
#X restore 297 273 pd Normalize;
#X obj 200 255 bng 12 50 20 0 \$0-A \$0-B empty 14 6 1 9 -262144 -1
-1;
#X obj 201 263 cnv 4 10 4 empty empty empty 20 12 0 14 -260097 -66577
0;
#X obj 23 572 cnv 15 320 24 empty empty empty 20 12 0 14 -261682 -66577
0;
#X obj 24 576 outlet;
#X msg 80 295 B;
#X obj 489 201 cnv 4 10 4 empty empty empty 20 12 0 14 -260097 -66577
0;
#X obj 125 78 cnv 15 320 24 empty empty empty 20 12 0 14 -261682 -66577
0;
#X obj 127 81 inlet;
#X obj 434 202 cnv 3 3 3 empty empty Parole3. 1 5 1 14 -262144 -1 1.04858e+06
;
#X obj 364 518 moocow/flite;
#X obj 201 201 cnv 4 10 4 empty empty empty 20 12 0 14 -260097 -66577
0;
#X obj 458 80 cnv 15 350 24 empty empty empty 20 12 0 14 -261682 -66577
0;
#X obj 456 83 inlet;
#X obj 364 493 cyclone/prepend list;
#X text 69 570 -> Bang à la fin de la lecture du fichier;
#X text 70 580 -> Bang at the end of the reading of the file;
#X obj 483 572 cnv 15 270 24 empty empty empty 20 12 0 14 -261682 -66577
0;
#X obj 488 576 outlet;
#X obj 488 255 bng 12 50 20 0 \$0-A \$0-B empty 14 6 1 9 -262144 -1
-1;
#X obj 489 263 cnv 4 10 4 empty empty empty 20 12 0 14 -260097 -66577
0;
#X text 518 570 -> Bang à la fin de la synthèse;
#X text 519 580 -> Bang at the end of the synthesis;
#X text 164 76 <- N'importe quel message déclenche la lecture;
#X text 165 86 <- Any message trigs the reading of the file;
#X obj 364 541 t b b;
#X text 47 294 Text;
#X symbolatom 234 213 44 0 0 0 - - -;
#X obj 351 200 bng 12 250 50 0 \$0-A \$0-B Normalize 15 7 1 9 -262144
-1 -1;
#X obj 297 200 tgl 12 1 \$0-A \$0-B Loop 15 6 1 9 -262144 -1 -1 0 1
;
#N canvas 0 22 844 357 (subpatch) 0;
#X array A2826 38771 float 2;
#X coords 0 1 38771 -1 300 40 1;
#X restore 200 228 graph;
#X text 589 143 list2symbol pour les textes avec espace;
#X text 495 88 <- English text without comma \, "bang" \, semicolon
;
#X text 493 78 <- Texte anglais sans virgule \, "bang" \, point virgule
;
#X obj 456 120 t b a;
#X obj 483 144 zexy/list2symbol;
#X obj 529 399 expr size("$s1");
#X text 505 199 22 8 2019;
#X obj 754 723 cnv 15 52 22 empty empty empty 20 12 0 14 -24198 -66577
0;
#N canvas 353 174 321 152 ?... 0;
#X obj 8 84 cnv 15 300 56 empty empty empty 20 12 0 14 -224896 -66577
0;
#X obj 8 7 cnv 18 300 70 empty empty ARGOPdMiniModules 3 10 1 14 -4033
-1 1.04858e+06;
#X obj 31 27 cnv 10 10 10 empty empty Gerard 0 5 1 11 -4033 -1 1.04858e+06
;
#X obj 69 27 cnv 10 10 10 empty empty Paresys 0 5 1 11 -4033 -1 1.04858e+06
;
#X obj 12 40 pddp/pddplink http://gerard.paresys.free.fr/ARGOPd/;
#X obj 13 121 pddp/pddplink http://puredata.info/downloads/pd-extended
;
#X obj 13 97 pddp/pddplink http://puredata.info/downloads/pure-data
;
#X text 13 85 Construit sous / Build under Pd-0.49...;
#X text 12 109 or Pd 0.43.4-extended;
#X obj 12 53 pddp/pddplink https://paresys.pagesperso-orange.fr/ARGOPd/
;
#X restore 757 726 pd ?...;
#X obj 61 602 cnv 15 600 150 empty empty empty 20 12 0 14 -258113 -66577
0;
#X text 64 656 Cela crash Pd...;
#X text 65 725 4 Coller le MiniModule dans le patch;
#X text 65 699 2 Fermer le patch d'où il a été copié;
#X text 337 675 SOLUTION;
#X text 64 632 Ces MiniModules ne sont pas duplicables directement
;
#X text 385 644 (by doing: Duplicate or Copy + Paste);
#X text 385 656 This crash Pd ...;
#X text 65 687 1 Copier le MiniModule;
#X text 385 687 1 Copy the MiniModule;
#X text 385 699 2 Close the patch where it was copied;
#X text 65 712 3 Ré-ouvrir le patch;
#X text 385 712 3 Re-open the patch;
#X text 385 725 4 Paste the MiniModule in the patch;
#X text 288 602 ATTENTION;
#X text 64 619 Bug sous MacOSX;
#X text 385 619 Bug under MacOSX;
#X text 64 644 (en faisant: Dupliquer ou Copier + Coller);
#X text 385 632 These MiniModules are not directly duplicable;
#X connect 1 0 57 0;
#X connect 2 0 18 0;
#X connect 2 0 27 0;
#X connect 2 1 19 0;
#X connect 2 1 25 0;
#X connect 3 0 7 0;
#X connect 4 0 35 0;
#X connect 7 0 57 0;
#X connect 7 1 35 0;
#X connect 7 2 16 0;
#X connect 8 0 14 0;
#X connect 14 0 2 0;
#X connect 15 0 14 0;
#X connect 15 0 26 0;
#X connect 16 0 18 0;
#X connect 16 0 30 0;
#X connect 16 0 40 0;
#X connect 16 1 66 0;
#X connect 17 0 11 0;
#X connect 18 0 0 0;
#X connect 18 1 29 0;
#X connect 18 1 31 0;
#X connect 19 0 18 0;
#X connect 20 0 11 0;
#X connect 21 0 20 0;
#X connect 22 0 23 0;
#X connect 23 0 24 0;
#X connect 24 0 20 1;
#X connect 25 0 20 0;
#X connect 26 0 14 0;
#X connect 26 1 28 0;
#X connect 27 0 21 0;
#X connect 27 1 24 0;
#X connect 27 2 25 0;
#X connect 28 0 14 0;
#X connect 29 0 8 0;
#X connect 29 1 28 0;
#X connect 31 0 34 0;
#X connect 35 0 65 0;
#X connect 38 0 15 0;
#X connect 40 0 55 0;
#X connect 43 0 64 0;
#X connect 44 0 40 0;
#X connect 49 0 48 0;
#X connect 55 0 49 0;
#X connect 55 1 66 0;
#X connect 57 0 4 0;
#X connect 57 0 44 0;
#X connect 58 0 30 1;
#X connect 59 0 8 1;
#X connect 64 0 57 0;
#X connect 64 1 65 0;
#X connect 65 0 1 0;
#X connect 66 0 22 0;
#X connect 66 0 17 0;
#X coords 0 -1 1 1 300 68 2 200 200;
#X restore 21 53 pd ARGO;
