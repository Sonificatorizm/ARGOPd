#N canvas 403 22 520 420 12;
#X obj 126 86 inlet;
#X obj 215 240 *;
#X obj 80 275 del;
#X obj 29 85 r reset-stop;
#X obj 112 361 outlet;
#X obj 326 361 outlet;
#X obj 183 151 get \$1 x y;
#X obj 112 334 pointer;
#X text 112 385 outlets: pointer (delayed) \, y-value.;
#X obj 126 121 t b p;
#X obj 80 303 t b b;
#X obj 215 209 -;
#X obj 183 179 t f f;
#X obj 14 361 s next-evt;
#X obj 182 361 s time-of-last-evt;
#X obj 379 88 r delay-multiplier;
#X text 56 -1 This is an abstraction used by the sequencer example.
;
#X text 55 23 Here we carry out the actual sequencing. Argument is
template of the scalar. Note the sends and receives which must agree
with the rest of the patch.;
#X obj 233 89 r time-of-last-evt2;
#X connect 0 0 9 0;
#X connect 1 0 2 1;
#X connect 2 0 10 0;
#X connect 3 0 2 0;
#X connect 6 0 12 0;
#X connect 6 1 5 0;
#X connect 7 0 4 0;
#X connect 9 0 2 0;
#X connect 9 1 7 1;
#X connect 9 1 6 0;
#X connect 10 0 13 0;
#X connect 10 1 7 0;
#X connect 11 0 1 0;
#X connect 12 0 14 0;
#X connect 12 1 11 0;
#X connect 15 0 1 1;
#X connect 18 0 11 1;
